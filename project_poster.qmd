---
title: Visualising Inflation in Singapore Across Various Industries
format: 
    poster-typst:
        size: "33x23"
        poster-authors: "Chua Joshua, Lim Joshua, Ong Zi Xuan Max, Ray Lim Le Hao, Sherwyn Tan Wee Wen, Tan Jia Wen"
        departments: "Information and Communication Technologies"
        institution-logo: "./images/sit-logo.png"
        footer-text: "Information Visualization 2024"
execute:
  echo: false
knitr:
  opts_chunk:
    dev: svglite
---

```{r}
#| label: setup
#| include: false

library(knitr)
library(patchwork)
purl("project_prep.qmd")
source("project_prep.R")
```

# Introduction

The infographic published by The Straits Times provides a comprehensive overview of how prices have changed in 2023. Featuring a heat map, it visually represents the monthly inflationary impact on a wide range of key items. This illustration highlights the varying rates of price changes across different categories of goods and services (e.g. food, healthcare, transportation, etc.) throughout the year. Through this visual tool, readers can gain a deeper understanding of the broader economic landscape and discern inflation trends and their impacts on essential goods and services in Singapore. In addition, this information allows readers to assess whether their personal experiences with inflation align with the actual data collected, offering a clearer picture of the economic environment.

# Previous Visualization

```{r}
#| label: old-vis-on-poster
#| fig-cap: "Heat map of inflationary impact on key items over 2023."
#| out-width: 100%
#| out-height: 50%

include_graphics("images/old_poster.png")
```

# Strengths

-   The heatmap has organized the information in different categories which allow users to see the impact of inflation towards different domains over the months from 2022 to 2023.

-   Each category is clearly labelled while being separated with padding and a line to ensure users can focus on one category at a time without accidentally reading information from another category. This eases the visual load of the user which reduces the time needed for the users to understand the heatmap

-   The average column calculates the average change between the years which allows the users to see the overall impact of the inflation for the different domains.

-   Data source has been credited at the end of the heatmap where the source is from the Singapore Department of Statistics

# Suggested Improvements

1.  *Spelling out the months instead of just letters* could provide better understanding of the graph. Letters may result in the reader needing more time to interpret them in the poster which increases the cognitive load of the reader.

2.  *Include change in Inflation Rate from the past few years* which allow readers to compare the trend of the inflation rate changes over the past years with the changes from 2023. This portrays the message of the poster more clearly as it shows impact of inflation in 2023 compared to past years.

3.  *Implementing a line chart instead of the heat map* allows readers to see trends more clearly as they do not have to refer to the color legend to understand the graph.

4.  *Clarify or remove vague sections* such as:

    -   "Food (excludes food-serving services)" which require more clarification on what services are being excluded

    -   "Miscellaneous goods and services" is too generic.

# Implementation

## Data

-   The change in inflation rate from the past few years since 1962 from different domains were obtained from the SingStat Website.[^1] The data does contain missing data however, after filtering and selecting the relevant years we need for our plot, we manage to remove the missing data from our table.

[^1]: https://www.singstat.gov.sg/-/media/files/publications/economy/cpiapr24.ashx

## Software

We used the Quarto publication framework and the R programming language, along with the following third-party packages:

-   *readxl* for data import
-   *tidyverse* package which includes:
    -   *ggplot2* for data visualization
    -   *dplyr* for data transformation
-   *knitr* for dynamic document generation
-   *patchwork* to combine plots together

# Improved Visualization

```{r}
#| label: overview-visualization-2
#| include: false
#| echo: false

#  to make the y scale format consistent (1 decimal place)
one_dp_format <- function(x) sprintf("%.1f", x)

overall_plot <- ggplot(combined_all_items_data, aes(x = Month)) +
  geom_line(aes(y = Value_Average, color = "Average (2020-2022)")) +
  geom_line(aes(y = Value_2023, color = "2023")) +
  labs(
    title = "Singapore's average inflation trend for all items", 
    x = "Month", 
    y = "Rate (%)",
    color = "Inflation Rate"  # Change legend title here
    ) +
  scale_color_manual(values = c("Average (2020-2022)" = "blue", "2023" = "red")) +
  theme_minimal() +
  scale_x_continuous(breaks = c(1, 6, 12), labels = c("Jan", "Jun", "Dec")) + 
  scale_y_continuous(labels = one_dp_format) +
  theme(
    plot.title = element_text(face="bold"),
    axis.title.x = element_text(face = "bold", vjust="1.2"),
    axis.title.y = element_text(face = "bold"),
    legend.title = element_text(face = "bold"),
  )
overall_plot
```

```{r}
#| label: improved-visualization
#| fig.width: 8.5
#| fig.height: 5
#| warning: false

#  to make the y scale format consistent (1 decimal place)
one_dp_format <- function(x) sprintf("%.1f", x)

line_plot <- ggplot(combined_data, aes(x = Month)) +
  geom_line(aes(y = Value_Average, color = "Average (2020-2022)")) +
  geom_line(aes(y = Value_2023, color = "2023")) +
  facet_wrap(~ Variables, scales = "free_y", axes="all", axis.labels="all_x") +
  labs(
    title = "Singapore's Past Average Inflation Trends (2020-2022) vs 2023", 
    x = "Month", 
    y = "Rate (%)",
    color = "Inflation Rate"  # Change legend title here
  ) +
  scale_color_manual(values = c("Average (2020-2022)" = "blue", "2023" = "red")) +
  theme_minimal() +
  scale_x_continuous(breaks = c(1, 6, 12), labels = c("Jan", "Jun", "Dec")) +
  scale_y_continuous(labels = one_dp_format) +
  theme(
    plot.title = element_text(face="bold"),
    axis.title.x = element_text(face = "bold", vjust="1.2"),
    axis.title.y = element_text(face = "bold"),
    legend.title = element_text(face = "bold"),
  )

overall_plot / line_plot
```

# Further Suggestions for Interactivity

As our visualisation was to be non-interactive for a poster, we did not implement any interactive features. However, if the visualization were to be interactive, a few features would be considered. They are as follows:

1.  *Interactive plots* for the users to potentially select the number of years they would like to view for the inflation rate over the past few years. This can be achieved with the *plotly* library in R which helps to embed interactivity into web applications.
2.  *A dashboard* for users to interact with various elements of our chart to display the data that they want to see. This can be accomplished with the *shiny* library in R which helps to build complex dashboards and applications that display interactive plots, tables and other UI elements.
3.  Another library to help with interactivity would be *highcharter* which makes use of the Highcharts JavaScript library to provide a simple interface to generate sophisticated and highly customizable charts.
4.  *Predictive Analysis* to forecast future trends and outcomes for the users to view. The *tidymodels* library would assist in providing the essentials to build models to predict future outcomes.

# Conclusion

We have successfully implemented all suggested improvements for the non-interactive visualization. Adding additional past year's data allows users are able to compare trends of the change in inflation rate between 2023 and the average of the past few years, providing them with more valuable insights to the users through comparison. Moreover, implementing a line chart further enhances the visualization of the trends in the plot.
